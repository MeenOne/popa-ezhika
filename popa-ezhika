#include <D:/TX/TXLib.h>
#include  <stdio.h>


struct choords {
    int x;
    int y;
    int x1;
};

void ground();

void wall(int x, int y);

void rogatka_part1(int x, int y);
void rogatka_part2(int x, int y);
void line_for_rogatka(int x, int y);

void draw_higher_rubber(int x, int y, int d);
void draw_lowler_rubber(int x, int y, int d);
void control_rubber(int* d);

void draw_shar(int x, int y);

int ottyag(int x, int y);

void vozvrat(int x, int y, int d);

void polet(int d);


int main()
{
    int dd = 0;

    int t = 0;

    txCreateWindow(1100, 500);
    ground();
    wall(0, 0);

    dd = ottyag(0, 0);

    printf("d=%d\n", dd);

    vozvrat(0, 0, dd);

    polet(dd);

    return 0;
}

void ground()
{
    txSetColor(TX_GREEN);
    txSetFillColor(TX_LIGHTBLUE);
    txRectangle(0, 0, 1100, 250);
    txSetFillColor(TX_GREEN);
    txRectangle(0, 250, 1100, 500);

}

void wall(int x, int y)
{
    txSetColor(TX_BLACK);
    txSetFillColour(RGB(160, 54, 35));
    txRectangle(x + 70, y + 450, x + 150, y + 250);
    POINT up[4]{ {x + 70, y + 250}, {x + 150, y + 250,}, {x + 250, y + 180}, {x + 170, y + 180} };
    txPolygon(up, 4);
    POINT left[4]{ {x + 150, y + 450}, {x + 150, y + 250}, {x + 250, y + 180}, {x + 250, y + 380} };
    txPolygon(left, 4);
}

void rogatka_part1(int x, int y)
{
    txSetColor(TX_BLACK);
    txSetFillColor(TX_BROWN);
    POINT rog[6]{ {x + 150, y + 220}, {x + 160, y + 220}, {x + 160, y + 160}, {x + 150, y + 90}, {x + 135, y + 90}, {x + 150, y + 160} };
    txPolygon(rog, 6);
}

void rogatka_part2(int x, int y)
{
    txSetColor(TX_BLACK);
    txSetFillColor(TX_BROWN);
    POINT rog[6]{ {x + 160, y + 220}, {x + 170, y + 220}, {x + 170,y + 160}, {x + 190,y + 100 }, {x + 180, y + 100}, {x + 160, y + 160} };
    txPolygon(rog, 6);
}

void line_for_rogatka(int x, int y)
{
    txSetColor(TX_BROWN);
    txLine(x + 160, y + 219, x + 160, y + 160);
    txSetColor(TX_BLACK);
}

void draw_higher_rubber(int x, int y, int d)
{
    txSetColor(TX_BLACK, 7);
    txArc(x + 65 - d, y + 105, 265 + d, 135, 45, 135);
}

void draw_lowler_rubber(int x, int y, int d)
{
    txSetColor(TX_BLACK, 7);
    txArc(x + 65 - d, y + 105, 265 + d, 135, -180, 35);
}



void control_rubber(int* d)
{
    if (GetAsyncKeyState(VK_LEFT)) *d++;

    if (GetAsyncKeyState(VK_RIGHT)) *d--;

    printf("d=%d\n", *d);

}

void draw_shar(int x, int y)
{
    txSetColor(TX_YELLOW);
    txSetFillColor(TX_YELLOW);
    txCircle(x + 95, y + 120, 20);
}

int ottyag(int x, int y)
{
    int d = 0;

    while (!txGetAsyncKeyState(VK_SPACE))
    {
        txClear();
        ground();
        wall(20, 0);
        //control_rubber(&d);
        //printf("d=%d\n",d);
        if (GetAsyncKeyState(VK_LEFT)) d--;
        if (GetAsyncKeyState(VK_RIGHT)) d;



        draw_higher_rubber(x, y, d);
        rogatka_part2(x, y);
        line_for_rogatka(x, y);
        draw_shar(-d, 0);
        rogatka_part1(x, y);
        draw_lowler_rubber(x, y, d);

        txSleep(50);

    }

    return d;
}

void vozvrat(int x, int y, int d)
{
    int bufd = d;

    while (bufd > -70)
    {
        txClear();
        ground();
        wall(20, 0);
        //control_rubber(&d);
        //printf("d=%d\n",d);

        draw_higher_rubber(x, y, bufd);
        rogatka_part2(x, y);
        line_for_rogatka(x, y);
        draw_shar(-bufd, 0);
        rogatka_part1(x, y);
        draw_lowler_rubber(x, y, bufd);

        txSleep(50);

        bufd = bufd - 5;

    }

}

void polet(int d)
{
    int t = 2;
    int m = 0;
    int p = 0;

    while (m < 250)
    {
        txClear();
        ground();
        wall(20, 0);

        draw_higher_rubber(20, 0, -d);
        rogatka_part2(0, 0);
        line_for_rogatka(0, 0);

        m = (0.0004*t*t*t)/0.2; //y
        p = 70 + ((t*t)/4); //x

        draw_shar(p, m);

        rogatka_part1(0, 0);
        draw_lowler_rubber(20, 0, -d);

        txSleep(50);
        t += 2;

    }
}
//m = (((0.005 * t * t) / 4) / 0.2) * t; //y
//p = 70 + ((2 * (t / 4)) * t); //x
